# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Document(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: float=None, name: str=None, data: float=None, source: str=None, url: str=None, keywords: str=None, text: str=None):  # noqa: E501
        """Document - a model defined in Swagger

        :param id: The id of this Document.  # noqa: E501
        :type id: float
        :param name: The name of this Document.  # noqa: E501
        :type name: str
        :param data: The data of this Document.  # noqa: E501
        :type data: float
        :param source: The source of this Document.  # noqa: E501
        :type source: str
        :param url: The url of this Document.  # noqa: E501
        :type url: str
        :param keywords: The keywords of this Document.  # noqa: E501
        :type keywords: str
        :param text: The text of this Document.  # noqa: E501
        :type text: str
        """
        self.swagger_types = {
            'id': float,
            'name': str,
            'data': float,
            'source': str,
            'url': str,
            'keywords': str,
            'text': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'data': 'data',
            'source': 'source',
            'url': 'url',
            'keywords': 'keywords',
            'text': 'text'
        }
        self._id = id
        self._name = name
        self._data = data
        self._source = source
        self._url = url
        self._keywords = keywords
        self._text = text

    @classmethod
    def from_dict(cls, dikt) -> 'Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Document of this Document.  # noqa: E501
        :rtype: Document
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> float:
        """Gets the id of this Document.


        :return: The id of this Document.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id: float):
        """Sets the id of this Document.


        :param id: The id of this Document.
        :type id: float
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Document.


        :return: The name of this Document.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Document.


        :param name: The name of this Document.
        :type name: str
        """

        self._name = name

    @property
    def data(self) -> float:
        """Gets the data of this Document.


        :return: The data of this Document.
        :rtype: float
        """
        return self._data

    @data.setter
    def data(self, data: float):
        """Sets the data of this Document.


        :param data: The data of this Document.
        :type data: float
        """

        self._data = data

    @property
    def source(self) -> str:
        """Gets the source of this Document.


        :return: The source of this Document.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this Document.


        :param source: The source of this Document.
        :type source: str
        """

        self._source = source

    @property
    def url(self) -> str:
        """Gets the url of this Document.


        :return: The url of this Document.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Document.


        :param url: The url of this Document.
        :type url: str
        """

        self._url = url

    @property
    def keywords(self) -> str:
        """Gets the keywords of this Document.


        :return: The keywords of this Document.
        :rtype: str
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords: str):
        """Sets the keywords of this Document.


        :param keywords: The keywords of this Document.
        :type keywords: str
        """

        self._keywords = keywords

    @property
    def text(self) -> str:
        """Gets the text of this Document.


        :return: The text of this Document.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this Document.


        :param text: The text of this Document.
        :type text: str
        """

        self._text = text
