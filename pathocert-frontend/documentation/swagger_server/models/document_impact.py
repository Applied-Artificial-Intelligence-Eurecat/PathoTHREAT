# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DocumentImpact(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, number_people_exposed: float=None, number_people_hospitalized: float=None, number_people_deceased: float=None, pathogens: List[str]=None, symptoms: List[str]=None):  # noqa: E501
        """DocumentImpact - a model defined in Swagger

        :param number_people_exposed: The number_people_exposed of this DocumentImpact.  # noqa: E501
        :type number_people_exposed: float
        :param number_people_hospitalized: The number_people_hospitalized of this DocumentImpact.  # noqa: E501
        :type number_people_hospitalized: float
        :param number_people_deceased: The number_people_deceased of this DocumentImpact.  # noqa: E501
        :type number_people_deceased: float
        :param pathogens: The pathogens of this DocumentImpact.  # noqa: E501
        :type pathogens: List[str]
        :param symptoms: The symptoms of this DocumentImpact.  # noqa: E501
        :type symptoms: List[str]
        """
        self.swagger_types = {
            'number_people_exposed': float,
            'number_people_hospitalized': float,
            'number_people_deceased': float,
            'pathogens': List[str],
            'symptoms': List[str]
        }

        self.attribute_map = {
            'number_people_exposed': 'numberPeopleExposed',
            'number_people_hospitalized': 'numberPeopleHospitalized',
            'number_people_deceased': 'numberPeopleDeceased',
            'pathogens': 'pathogens',
            'symptoms': 'symptoms'
        }
        self._number_people_exposed = number_people_exposed
        self._number_people_hospitalized = number_people_hospitalized
        self._number_people_deceased = number_people_deceased
        self._pathogens = pathogens
        self._symptoms = symptoms

    @classmethod
    def from_dict(cls, dikt) -> 'DocumentImpact':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DocumentImpact of this DocumentImpact.  # noqa: E501
        :rtype: DocumentImpact
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_people_exposed(self) -> float:
        """Gets the number_people_exposed of this DocumentImpact.


        :return: The number_people_exposed of this DocumentImpact.
        :rtype: float
        """
        return self._number_people_exposed

    @number_people_exposed.setter
    def number_people_exposed(self, number_people_exposed: float):
        """Sets the number_people_exposed of this DocumentImpact.


        :param number_people_exposed: The number_people_exposed of this DocumentImpact.
        :type number_people_exposed: float
        """

        self._number_people_exposed = number_people_exposed

    @property
    def number_people_hospitalized(self) -> float:
        """Gets the number_people_hospitalized of this DocumentImpact.


        :return: The number_people_hospitalized of this DocumentImpact.
        :rtype: float
        """
        return self._number_people_hospitalized

    @number_people_hospitalized.setter
    def number_people_hospitalized(self, number_people_hospitalized: float):
        """Sets the number_people_hospitalized of this DocumentImpact.


        :param number_people_hospitalized: The number_people_hospitalized of this DocumentImpact.
        :type number_people_hospitalized: float
        """

        self._number_people_hospitalized = number_people_hospitalized

    @property
    def number_people_deceased(self) -> float:
        """Gets the number_people_deceased of this DocumentImpact.


        :return: The number_people_deceased of this DocumentImpact.
        :rtype: float
        """
        return self._number_people_deceased

    @number_people_deceased.setter
    def number_people_deceased(self, number_people_deceased: float):
        """Sets the number_people_deceased of this DocumentImpact.


        :param number_people_deceased: The number_people_deceased of this DocumentImpact.
        :type number_people_deceased: float
        """

        self._number_people_deceased = number_people_deceased

    @property
    def pathogens(self) -> List[str]:
        """Gets the pathogens of this DocumentImpact.


        :return: The pathogens of this DocumentImpact.
        :rtype: List[str]
        """
        return self._pathogens

    @pathogens.setter
    def pathogens(self, pathogens: List[str]):
        """Sets the pathogens of this DocumentImpact.


        :param pathogens: The pathogens of this DocumentImpact.
        :type pathogens: List[str]
        """

        self._pathogens = pathogens

    @property
    def symptoms(self) -> List[str]:
        """Gets the symptoms of this DocumentImpact.


        :return: The symptoms of this DocumentImpact.
        :rtype: List[str]
        """
        return self._symptoms

    @symptoms.setter
    def symptoms(self, symptoms: List[str]):
        """Sets the symptoms of this DocumentImpact.


        :param symptoms: The symptoms of this DocumentImpact.
        :type symptoms: List[str]
        """

        self._symptoms = symptoms
